apply plugin: 'java-library'
apply plugin: "com.commercehub.gradle.plugin.avro-base"
apply plugin: 'eclipse'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.3"
    classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.16.0"
  }
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

allprojects { 
	repositories {
	    jcenter()
	    maven {
	    	url "https://oss.sonatype.org/content/repositories/snapshots/"
	    }
	    maven {
    		url 'https://packages.confluent.io/maven/'
    	}
	}
}

dependencies {
    // These dependencies is exported to consumers, that is to say found on their compile classpath.
    api 'net.kieker-monitoring:kieker:1.14-SNAPSHOT'
    api 'org.apache.kafka:kafka-clients:2.1.0'
    api 'com.datastax.cassandra:cassandra-driver-core:3.4.0'
    api 'org.apache.avro:avro:1.8.2'
    api 'io.confluent:kafka-streams-avro-serde:5.0.1'
	api 'org.apache.commons:commons-configuration2:2.0'

    // These dependencies are used internally, and not exposed to consumers on their own compile classpath.
    implementation 'commons-beanutils:commons-beanutils:1.9.2' // necessary for commons-configuration2
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.google.guava:guava:24.1-jre'
    implementation 'org.slf4j:slf4j-api:1.7.25'

    // Use JUnit test framework   
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'com.github.stefanbirkner:system-rules:1.17.0'
    testImplementation 'org.cassandraunit:cassandra-unit-shaded:3.3.0.2'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src-gen/main/java'
        }
    }
 }

avro {
    fieldVisibility = "PRIVATE"
    createSetters = false
}

task("generateAvroProtocol", type: com.commercehub.gradle.plugin.avro.GenerateAvroProtocolTask) {
    group 'Generate Sources'
    source file("src/main/avro")
    include("**/*.avdl")
    outputDir = file("build/generated-avro-main-avpr")
}

task("generateAvroSchema", type: com.commercehub.gradle.plugin.avro.GenerateAvroSchemaTask) {
    group 'Generate Sources'
    dependsOn generateAvroProtocol
    source file("src/main/avro")
    source file("build/generated-avro-main-avpr")
    include("**/*.avpr")
    outputDir = file("src-gen/main/avro")
}

task ("generateAvroJava", type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    group 'Generate Sources'
    dependsOn generateAvroSchema
    source file("src-gen/main/avro")
    outputDir = file("src-gen/main/java")
}

eclipse {
    classpath {
       downloadSources=true
       downloadJavadoc=true
    }
}
